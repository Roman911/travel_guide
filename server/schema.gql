# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Socials {
  facebook: String
  instagram: String
  twitter: String
  youtube: String
}

type CreateUserDto {
  id: ID!
  name: String!
  email: String!
  password: String!
  isActivated: Boolean!
  activationLink: String!
  avatar: String
  rating: Int
  aboutMy: String
  socials: Socials
  last_seen: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CreateUserDataDto {
  user: CreateUserDto!
  accessToken: String!
  refreshToken: String!
}

type Answer {
  comment: String
  createdAt: DateTime
  author: CreateUserDto
}

type CreateCommentDto {
  _id: String!
  postId: String!
  comment: String!
  answer: [Answer!]!
  last_seen: DateTime
  createdAt: DateTime!
  author: CreateUserDto
}

type CreatePostDto {
  _id: String!
  editor: String!
  type_material: String!
  cover: String!
  title: String!
  tickets: [String!]!
  link: String!
  tags: [String!]!
  work_time: String!
  isType: String!
  how_to_get_there: String!
  views: Int!
  likes: [String!]!
  isPrice: Boolean!
  confirmed: Boolean!
  confirm_hash: String!
  comments: Int!
  small_text: String!
  last_seen: DateTime
  createdAt: DateTime!
  author: CreateUserDto
}

type CreateTokenDto {
  userId: ID
  refreshToken: String!
}

type Query {
  comments(postId: String!): [CreateCommentDto!]!
  posts(input: ParamsPostInput!): [CreatePostDto!]!
  postsTop: [CreatePostDto!]!
  post(postID: String!): CreatePostDto!
  users: [CreateUserDto!]!
  user(userID: String!): CreateUserDto!
  author(_id: String!): CreateUserDto!
  activate(activationLink: String!): CreateUserDataDto!
  login(input: LoginUserInput!): CreateUserDataDto!
  logout(refreshToken: String!): CreateUserDataDto!
  refresh(refreshToken: String!): CreateUserDataDto!
}

input ParamsPostInput {
  limit: Int!
  page: Int!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  createComment(input: CommentInput!): CreateCommentDto!
  createToken(input: TokenInput!): CreateTokenDto!
  registration(input: RegistrationUserInput!): CreateUserDataDto!
}

input CommentInput {
  author: ID!
  comment: String!
  postId: String!
}

input TokenInput {
  userId: ID!
  refreshToken: String!
}

input RegistrationUserInput {
  name: String!
  email: String!
  password: String!
}